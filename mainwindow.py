# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1395, 812)
        font = QtGui.QFont()
        font.setFamily("ModeSeven")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("font: 11pt \"ModeSeven\";\n"
"background-color: rgb(106, 9, 158);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.ropgadgets = QtWidgets.QListWidget(self.centralwidget)
        self.ropgadgets.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"font: 75 11pt \"FreeMono\";\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.ropgadgets.setObjectName("ropgadgets")
        self.gridLayout.addWidget(self.ropgadgets, 5, 0, 2, 3)
        self.lineEditDectorUPX = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEditDectorUPX.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.lineEditDectorUPX.setObjectName("lineEditDectorUPX")
        self.gridLayout.addWidget(self.lineEditDectorUPX, 7, 3, 1, 1)
        self.checksec = QtWidgets.QListWidget(self.centralwidget)
        self.checksec.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.checksec.setObjectName("checksec")
        self.gridLayout.addWidget(self.checksec, 6, 3, 1, 2)
        self.filesize = QtWidgets.QLineEdit(self.centralwidget)
        self.filesize.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.filesize.setObjectName("filesize")
        self.gridLayout.addWidget(self.filesize, 2, 1, 1, 1)
        self.filetype = QtWidgets.QLineEdit(self.centralwidget)
        self.filetype.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.filetype.setObjectName("filetype")
        self.gridLayout.addWidget(self.filetype, 2, 0, 1, 1)
        self.countGatget = QtWidgets.QLineEdit(self.centralwidget)
        self.countGatget.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.countGatget.setObjectName("countGatget")
        self.gridLayout.addWidget(self.countGatget, 7, 0, 1, 3)
        self.textEditFromHex = QtWidgets.QTextEdit(self.centralwidget)
        self.textEditFromHex.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.textEditFromHex.setObjectName("textEditFromHex")
        self.gridLayout.addWidget(self.textEditFromHex, 3, 1, 1, 1)
        self.textEditHex = QtWidgets.QTextEdit(self.centralwidget)
        self.textEditHex.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.textEditHex.setObjectName("textEditHex")
        self.gridLayout.addWidget(self.textEditHex, 3, 0, 1, 1)
        self.architecture = QtWidgets.QLineEdit(self.centralwidget)
        self.architecture.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.architecture.setObjectName("architecture")
        self.gridLayout.addWidget(self.architecture, 2, 3, 1, 1)
        self.endianness = QtWidgets.QLineEdit(self.centralwidget)
        self.endianness.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.endianness.setObjectName("endianness")
        self.gridLayout.addWidget(self.endianness, 2, 2, 1, 1)
        self.killerUPX = QtWidgets.QPushButton(self.centralwidget)
        self.killerUPX.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.killerUPX.setObjectName("killerUPX")
        self.gridLayout.addWidget(self.killerUPX, 7, 4, 1, 1)
        self.openedFile = QtWidgets.QLineEdit(self.centralwidget)
        self.openedFile.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.openedFile.setObjectName("openedFile")
        self.gridLayout.addWidget(self.openedFile, 0, 0, 1, 5)
        self.type = QtWidgets.QLineEdit(self.centralwidget)
        self.type.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.type.setObjectName("type")
        self.gridLayout.addWidget(self.type, 2, 4, 1, 1)
        self.listWidgetHashes = QtWidgets.QListWidget(self.centralwidget)
        self.listWidgetHashes.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.listWidgetHashes.setObjectName("listWidgetHashes")
        self.gridLayout.addWidget(self.listWidgetHashes, 3, 2, 1, 1)
        self.listWidgetReadElf = QtWidgets.QListWidget(self.centralwidget)
        self.listWidgetReadElf.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.listWidgetReadElf.setObjectName("listWidgetReadElf")
        self.gridLayout.addWidget(self.listWidgetReadElf, 3, 3, 1, 2)
        self.textEditFileAbout = QtWidgets.QTextEdit(self.centralwidget)
        self.textEditFileAbout.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.textEditFileAbout.setObjectName("textEditFileAbout")
        self.gridLayout.addWidget(self.textEditFileAbout, 4, 3, 2, 2)
        self.grepGadget = QtWidgets.QLineEdit(self.centralwidget)
        self.grepGadget.setStyleSheet("background-color: rgb(196, 112, 255);\n"
"border-color: rgb(65, 5, 98);\n"
"selection-color: rgb(65, 5, 98);")
        self.grepGadget.setObjectName("grepGadget")
        self.gridLayout.addWidget(self.grepGadget, 4, 0, 1, 3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1395, 20))
        self.menubar.setStyleSheet("background-color: rgb(23, 2, 35);\n"
"selection-background-color: rgb(65, 5, 98);\n"
"color: rgb(255, 255, 255);")
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionGrep = QtWidgets.QAction(MainWindow)
        self.actionGrep.setObjectName("actionGrep")
        self.actionStrings = QtWidgets.QAction(MainWindow)
        self.actionStrings.setObjectName("actionStrings")
        self.actionSeccomp_tools = QtWidgets.QAction(MainWindow)
        self.actionSeccomp_tools.setObjectName("actionSeccomp_tools")
        self.actionSyscall_table = QtWidgets.QAction(MainWindow)
        self.actionSyscall_table.setObjectName("actionSyscall_table")
        self.actionJTDisasm = QtWidgets.QAction(MainWindow)
        self.actionJTDisasm.setObjectName("actionJTDisasm")
        self.menuFile.addAction(self.actionOpen)
        self.menuAbout.addAction(self.actionSyscall_table)
        self.menuAbout.addAction(self.actionAbout)
        self.menuTools.addAction(self.actionStrings)
        self.menuTools.addAction(self.actionSeccomp_tools)
        self.menuTools.addAction(self.actionJTDisasm)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.grepGadget.returnPressed.connect(self.actionGrep.trigger) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "J0llyTr0LLz"))
        MainWindow.setStatusTip(_translate("MainWindow", "J0llyTr0LLz build 09092023 by AFANX"))
        self.lineEditDectorUPX.setPlaceholderText(_translate("MainWindow", "detector UPX"))
        self.filesize.setPlaceholderText(_translate("MainWindow", "file size"))
        self.filetype.setPlaceholderText(_translate("MainWindow", "file type"))
        self.countGatget.setPlaceholderText(_translate("MainWindow", "find gadgets"))
        self.textEditFromHex.setPlaceholderText(_translate("MainWindow", "DECODE FROM HEX..."))
        self.textEditHex.setPlaceholderText(_translate("MainWindow", "HEX..."))
        self.architecture.setPlaceholderText(_translate("MainWindow", "architecture"))
        self.endianness.setPlaceholderText(_translate("MainWindow", "endianness"))
        self.killerUPX.setText(_translate("MainWindow", "KillUPX"))
        self.openedFile.setPlaceholderText(_translate("MainWindow", "opened file..."))
        self.type.setPlaceholderText(_translate("MainWindow", "type"))
        self.textEditFileAbout.setPlaceholderText(_translate("MainWindow", "about file"))
        self.grepGadget.setPlaceholderText(_translate("MainWindow", "grep for gadgets...clear and press <Enter> for get all gadgets"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuAbout.setTitle(_translate("MainWindow", "Help"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionGrep.setText(_translate("MainWindow", "grep"))
        self.actionGrep.setShortcut(_translate("MainWindow", "Return"))
        self.actionStrings.setText(_translate("MainWindow", "strings"))
        self.actionStrings.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSeccomp_tools.setText(_translate("MainWindow", "seccomp-tools"))
        self.actionSeccomp_tools.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionSyscall_table.setText(_translate("MainWindow", "syscall table"))
        self.actionSyscall_table.setShortcut(_translate("MainWindow", "F1"))
        self.actionJTDisasm.setText(_translate("MainWindow", "jtDisasm"))
        self.actionJTDisasm.setShortcut(_translate("MainWindow", "Ctrl+D"))
